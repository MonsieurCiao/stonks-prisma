// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("PRISMA_DATABASE_URL") // uses connection pooling
  // directUrl = env("POSTGRES_URL") // uses a direct connection
}

// IMPORTANT is that every user only has one asset per stock
model Asset {
  id          String @id @default(cuid())
  stockSymbol String @unique
  quantity    Float  @default(0)
  userId      String //foreign key
  user        User   @relation(fields: [userId], references: [id])
  boughtFor   Float  @default(5) //price at which the asset was bought

  @@unique([stockSymbol, userId])
}

model User {
  id        String   @id @default(cuid())
  name      String   @unique
  password  String
  email     String   @unique
  createdAt DateTime @default(now()) @map(name: "created_at")
  orders    Order[]
  money     Float    @default(5000)
  assets    Asset[]

  @@map(name: "users")
}

enum OrderType {
  BUY
  SELL
}

model Order {
  id          String    @id @default(cuid())
  stockSymbol String
  price       Float
  quantity    Float
  type        OrderType
  assetId     String? //foreign key, optional because it might not be set for SELL
  createdAt   DateTime  @default(now())
  userId      String //foreign key
  user        User      @relation(fields: [userId], references: [id])
}

model StockPrice {
  id          String   @id @default(cuid())
  stockSymbol String
  open        Float
  high        Float
  low         Float
  close       Float
  time        DateTime @default(now())
  avgPrice    Float    @default(0)

  @@map(name: "stock_prices")
}

model PriceInfluence {
  id        String   @id @default(cuid())
  influence Float[]  @default([0.5, 0.5, 0.5])
  time      DateTime @default(now())
}

model NewsPost {
  id      String   @id @default(cuid())
  time    DateTime @default(now())
  title   String
  content String

  @@map(name: "news_post")
}
